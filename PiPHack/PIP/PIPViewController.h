//
//     Generated by class-dump 3.5 (64 bit).
//
//     class-dump is Copyright (C) 1997-1998, 2000-2001, 2004-2013 by Steve Nygard.
//

#import <Foundation/Foundation.h>
#import <AppKit/AppKit.h>
#import "PIPViewControllerDelegate.h"
#include <stdbool.h>

@class CAContext, NSString, NSView, NSWindow, PIPPanel;

NS_CLASS_AVAILABLE(10_12, NA)
@interface PIPViewController : NSViewController <NSViewControllerPresentationAnimator>
{
    struct CGSize _aspectRatio;
    struct CGSize _maxSize;
    struct CGSize _minSize;
    bool _userCanResize;
    bool _playing;
    bool _animateDismissal;
    bool _pipping;
    unsigned int _activeFencePort;
    bool _useAutoLayout;
    bool _presentOnResize;
    id <PIPViewControllerDelegate> _delegate;
    NSView *_replacementView;
    NSString *_name;
    PIPPanel *_panel;
    CAContext *_context;
    id _accessibility;
    NSWindow *_replacementWindow;
    struct CGRect _bounds;
    struct CGRect _replacementRect;
}

@property(nonatomic) NSRect replacementRect; // @synthesize replacementRect=_replacementRect;
@property(nonatomic, weak, nullable) NSWindow *replacementWindow; // @synthesize replacementWindow=_replacementWindow;
@property(nonatomic) bool presentOnResize; // @synthesize presentOnResize=_presentOnResize;
@property(nonatomic) bool useAutoLayout; // @synthesize useAutoLayout=_useAutoLayout;
@property(nonatomic) NSRect bounds; // @synthesize bounds=_bounds;
@property(retain, nonatomic, null_unspecified) id accessibility; // @synthesize accessibility=_accessibility;
@property(retain, nonatomic, null_unspecified) CAContext *context; // @synthesize context=_context;
@property(retain, nonatomic, null_unspecified) PIPPanel *panel; // @synthesize panel=_panel;
@property(copy, nonatomic, null_unspecified) NSString *name; // @synthesize name=_name;
@property(nonatomic, weak, nullable) NSView *replacementView; // @synthesize replacementView=_replacementView;
@property(nonatomic, weak, nullable) id <PIPViewControllerDelegate> delegate; // @synthesize delegate=_delegate;
- (unsigned int)copyActiveFencePort;
- (void)presentViewControllerAsPictureInPicture:(nonnull NSViewController *)arg1 NS_SWIFT_NAME(present(asPictureInPicture:));
- (void)performWindowDragWithEvent:(nonnull NSEvent*)arg1;
- (void)setPlaying:(bool)arg1;
- (bool)playing;
@property(nonatomic) bool userCanResize;
@property(nonatomic) NSSize maxSize;
@property(nonatomic) NSSize minSize;
@property(nonatomic) NSSize aspectRatio;

@end

